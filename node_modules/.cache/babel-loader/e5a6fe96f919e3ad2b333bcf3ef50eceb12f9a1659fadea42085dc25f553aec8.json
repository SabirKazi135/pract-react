{"ast":null,"code":"var _jsxFileName = \"/home/sabir/Documents/CodePlay/pract-react/src/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [fruits, setFruits] = useState([\"Apple\", \"Orange\", \"banana\"]);\n  function addFruit() {\n    const newFruit = document.getElementById(\"newFruit\").value;\n    setFruits(f => [...f, newFruit]);\n    document.getElementById(\"newFruit\").value = \"\";\n  }\n  function removeFruit(i) {\n    setFruits(pf => pf.filter((_, index) => {\n      return i !== index;\n    }));\n  }\n  function editFruit(i) {\n    const newName = prompt(\"New name of fruit\");\n    setFruits(f => {\n      const copy = [...f];\n      copy[i] = newName;\n      r;\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List of Fruits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: fruits.map((fruit, index) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              display: \"inline-block\"\n            },\n            onClick: () => removeFruit(index),\n            children: fruit\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => editFruit(index),\n            children: \"edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"newFruit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addFruit,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"LYxDyqiP8rzrwIMw/tw1ti3sS8s=\");\n_c = App;\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 58,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ReactDOM","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","fruits","setFruits","addFruit","newFruit","document","getElementById","value","f","removeFruit","i","pf","filter","_","index","editFruit","newName","prompt","copy","r","children","fileName","_jsxFileName","lineNumber","columnNumber","map","fruit","style","display","onClick","type","id","_c","root","createRoot","render","$RefreshReg$"],"sources":["/home/sabir/Documents/CodePlay/pract-react/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [fruits, setFruits] = useState([\"Apple\", \"Orange\", \"banana\"]);\n  function addFruit() {\n    const newFruit = document.getElementById(\"newFruit\").value;\n    setFruits((f) => [...f, newFruit]);\n    document.getElementById(\"newFruit\").value = \"\";\n  }\n\n  function removeFruit(i) {\n    setFruits((pf) =>\n      pf.filter((_, index) => {\n        return i !== index;\n      })\n    );\n  }\n\n  function editFruit(i) {\n    const newName = prompt(\"New name of fruit\");\n    setFruits((f) => {\n      const copy = [...f];\n      copy[i] = newName;\n      r\n    });\n  }\n  return (\n    <>\n      <h1>List of Fruits</h1>\n      <ul>\n        {fruits.map((fruit, index) => {\n          return (\n            <>\n              <li\n                style={{\n                  display: \"inline-block\",\n                }}\n                key={index}\n                onClick={() => removeFruit(index)}\n              >\n                {fruit}\n              </li>\n              <button onClick={() => editFruit(index)}>edit</button>\n              <br />\n            </>\n          );\n        })}\n      </ul>\n      <input type=\"text\" id=\"newFruit\" />\n      <button onClick={addFruit}>Add</button>\n    </>\n  );\n}\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}