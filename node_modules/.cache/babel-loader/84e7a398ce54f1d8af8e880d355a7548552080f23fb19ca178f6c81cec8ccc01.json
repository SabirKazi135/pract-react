{"ast":null,"code":"var _jsxFileName = \"/home/sabir/Documents/CodePlay/pract-react/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  var _s = $RefreshSig$();\n  function addTask() {\n    _s();\n    const newTask = document.getElementById(\"inputTask\").value;\n    const [taskList, setTaskList] = useState([]);\n    document.getElementById(\"inputTask\").value = \"\";\n  }\n  _s(addTask, \"mW6q2/agXv25Ej2PBKHyLCwtTHc=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"inputTask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTask,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"taskBar\",\n      children: taskList.map((task, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [task, /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 35,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ReactDOM","useState","jsxDEV","_jsxDEV","App","_s","$RefreshSig$","addTask","newTask","document","getElementById","value","taskList","setTaskList","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onClick","map","task","index","_c","root","createRoot","render","$RefreshReg$"],"sources":["/home/sabir/Documents/CodePlay/pract-react/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  function addTask() {\n    const newTask = document.getElementById(\"inputTask\").value;\n    const [taskList, setTaskList] = useState([]);\n\n    document.getElementById(\"inputTask\").value = \"\";\n  }\n  return (\n    <div>\n      <h2>My To-Do List</h2>\n      <input type=\"text\" id=\"inputTask\" />{\" \"}\n      <button onClick={addTask}>Add</button>\n      <div id=\"taskBar\">\n        {taskList.map((task, index) => {\n          return (\n            <div>\n              {task}\n              <button>Done</button>\n              <button>Down</button>\n              <button>Up</button>\n              <button>Delete</button>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACb,SAASC,OAAOA,CAAA,EAAG;IAAAF,EAAA;IACjB,MAAMG,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,KAAK;IAC1D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;IAE5CQ,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,KAAK,GAAG,EAAE;EACjD;EAACN,EAAA,CALQE,OAAO;EAMhB,oBACEJ,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBf,OAAA;MAAOgB,IAAI,EAAC,MAAM;MAACC,EAAE,EAAC;IAAW;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAAC,GAAG,eACxCf,OAAA;MAAQkB,OAAO,EAAEd,OAAQ;MAAAO,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtCf,OAAA;MAAKiB,EAAE,EAAC,SAAS;MAAAN,QAAA,EACdF,QAAQ,CAACU,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QAC7B,oBACErB,OAAA;UAAAW,QAAA,GACGS,IAAI,eACLpB,OAAA;YAAAW,QAAA,EAAQ;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACrBf,OAAA;YAAAW,QAAA,EAAQ;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACrBf,OAAA;YAAAW,QAAA,EAAQ;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACnBf,OAAA;YAAAW,QAAA,EAAQ;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACO,EAAA,GA3BQrB,GAAG;AA4BZ,MAAMsB,IAAI,GAAG1B,QAAQ,CAAC2B,UAAU,CAAClB,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEgB,IAAI,CAACE,MAAM,cAACzB,OAAA,CAACC,GAAG;EAAAW,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,CAAC;AAAC,IAAAO,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}