{"ast":null,"code":"var _jsxFileName = \"/home/sabir/Documents/CodePlay/pract-react/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nfunction App() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [character, setCharacter] = useState(0);\n  function showCharacter(params) {}\n  function changeName(e) {\n    setName(e.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Name: \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => changeName(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Character: \", character]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: showCharacter,\n      children: \"Show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"BlpkGtt1XMPo/X3vvILWWjEKqWw=\");\n_c = App;\nroot.render(/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","jsxDEV","_jsxDEV","Fragment","_Fragment","root","createRoot","document","getElementById","App","_s","name","setName","character","setCharacter","showCharacter","params","changeName","e","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","render","$RefreshReg$"],"sources":["/home/sabir/Documents/CodePlay/pract-react/src/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\nfunction App() {\n  const [name, setName] = useState(\"\");\n  const [character, setCharacter] = useState(0);\n\nfunction showCharacter(params) {\n  \n}\n\n  function changeName(e) {\n    setName(e.target.value);\n  }\n  return (\n    <>\n      <div>Name: {name}</div>\n      <input type=\"text\" value={name} onChange={(e) => changeName(e)} />\n      <p>Total Character: {character}</p>\n      <button onClick={showCharacter}>Show</button>\n    </>\n  );\n}\n\nroot.render(<App />);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACxC,MAAMC,IAAI,GAAGL,QAAQ,CAACM,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAEjE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EAE/C,SAASiB,aAAaA,CAACC,MAAM,EAAE,CAE/B;EAEE,SAASC,UAAUA,CAACC,CAAC,EAAE;IACrBN,OAAO,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB;EACA,oBACElB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,GAAK,QAAM,EAACV,IAAI;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACvBvB,OAAA;MAAOwB,IAAI,EAAC,MAAM;MAACN,KAAK,EAAET,IAAK;MAACgB,QAAQ,EAAGT,CAAC,IAAKD,UAAU,CAACC,CAAC;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClEvB,OAAA;MAAAmB,QAAA,GAAG,mBAAiB,EAACR,SAAS;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCvB,OAAA;MAAQ0B,OAAO,EAAEb,aAAc;MAAAM,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAC7C,CAAC;AAEP;AAACf,EAAA,CAnBQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAqBZJ,IAAI,CAACyB,MAAM,cAAC5B,OAAA,CAACO,GAAG;EAAAa,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,CAAC;AAAC,IAAAI,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}