{"ast":null,"code":"var _jsxFileName = \"/home/sabir/Documents/CodePlay/pract-react/src/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cars, setCars] = useState([]);\n  const [carYear, setCarYear] = useState(new Date().getFullYear());\n  const [carMake, setCarMake] = useState(\"\");\n  const [carModel, setCarModel] = useState(\"\");\n  function addCar() {\n    const newCar = {\n      year: carYear,\n      make: carMake,\n      model: carModel\n    };\n    setCars(c => [...c, newCar]);\n  }\n  function removeCar(index) {}\n  function yearChange(event) {\n    setCarYear(event.target.value);\n  }\n  function makeChange(event) {\n    setCarMake(event.target.value);\n  }\n  function modelChange(event) {\n    setCarModel(event.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"List of Car objects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: cars.map((car, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [car.year, \", \", car.make, \",\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: carYear,\n      onChange: yearChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: carMake,\n      onChange: makeChange,\n      placeholder: \"Enter car maker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: carModel,\n      onChange: modelChange,\n      placeholder: \"Enter car model\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addCar,\n      children: \"Add Car\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"eiFgC/07gLh/wYcSWVEVYzpCpOs=\");\n_c = App;\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 58,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ReactDOM","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","cars","setCars","carYear","setCarYear","Date","getFullYear","carMake","setCarMake","carModel","setCarModel","addCar","newCar","year","make","model","c","removeCar","index","yearChange","event","target","value","makeChange","modelChange","children","fileName","_jsxFileName","lineNumber","columnNumber","map","car","type","onChange","placeholder","onClick","_c","root","createRoot","document","getElementById","render","$RefreshReg$"],"sources":["/home/sabir/Documents/CodePlay/pract-react/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [cars, setCars] = useState([]);\n  const [carYear, setCarYear] = useState(new Date().getFullYear());\n  const [carMake, setCarMake] = useState(\"\");\n  const [carModel, setCarModel] = useState(\"\");\n\n  function addCar() {\n    const newCar = { year: carYear, make: carMake, model: carModel };\n    setCars((c) => [...c, newCar]);\n  }\n\n  function removeCar(index) {}\n\n  function yearChange(event) {\n    setCarYear(event.target.value);\n  }\n  function makeChange(event) {\n    setCarMake(event.target.value);\n  }\n  function modelChange(event) {\n    setCarModel(event.target.value);\n  }\n\n  return (\n    <>\n      <h2>List of Car objects</h2>\n      <ul>\n        {cars.map((car, index) => (\n          <li key={index}>{car.year}, {car.make},</li>\n        ))}\n      </ul>\n      <input type=\"number\" value={carYear} onChange={yearChange} />\n      <br />\n      <input\n        type=\"text\"\n        value={carMake}\n        onChange={makeChange}\n        placeholder=\"Enter car maker\"\n      />\n      <br />\n      <input\n        type=\"text\"\n        value={carModel}\n        onChange={modelChange}\n        placeholder=\"Enter car model\"\n      />\n      <br />\n      <button onClick={addCar}>Add Car</button>\n    </>\n  );\n}\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}