{"ast":null,"code":"var _jsxFileName = \"/home/sabir/Documents/CodePlay/pract-react/src/Project.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Counter.css\"; // ðŸ‘ˆ Import the CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Counter() {\n  _s();\n  const [count, setCount] = useState(0);\n  const [step, setStep] = useState(1);\n  const minLimit = 0;\n  const maxLimit = 100;\n  function increment() {\n    setCount(prev => Math.min(prev + step, maxLimit));\n  }\n  function decrement() {\n    setCount(prev => Math.max(prev - step, minLimit));\n  }\n  function reset() {\n    setCount(0);\n    setStep(1);\n  }\n  function handleStepChange(e) {\n    const value = parseInt(e.target.value);\n    setStep(isNaN(value) || value <= 0 ? 1 : value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"counter-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display\",\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrement,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increment,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-input\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Step:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: step,\n          min: \"1\",\n          onChange: handleStepChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset-btn\",\n      onClick: reset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"limits\",\n      children: [\"Min: \", minLimit, \" | Max: \", maxLimit]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Counter, \"0qctxLJmImnmVnjI2X81AgRQYJw=\");\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Counter","_s","count","setCount","step","setStep","minLimit","maxLimit","increment","prev","Math","min","decrement","max","reset","handleStepChange","e","value","parseInt","target","isNaN","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","_c","$RefreshReg$"],"sources":["/home/sabir/Documents/CodePlay/pract-react/src/Project.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Counter.css\"; // ðŸ‘ˆ Import the CSS\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n  const [step, setStep] = useState(1);\n  const minLimit = 0;\n  const maxLimit = 100;\n\n  function increment() {\n    setCount((prev) => Math.min(prev + step, maxLimit));\n  }\n\n  function decrement() {\n    setCount((prev) => Math.max(prev - step, minLimit));\n  }\n\n  function reset() {\n    setCount(0);\n    setStep(1);\n  }\n\n  function handleStepChange(e) {\n    const value = parseInt(e.target.value);\n    setStep(isNaN(value) || value <= 0 ? 1 : value);\n  }\n\n  return (\n    <div className=\"counter-container\">\n      <h1>Counter</h1>\n      <div className=\"display\">{count}</div>\n\n      <div className=\"button-group\">\n        <button onClick={decrement}>-</button>\n        <button onClick={increment}>+</button>\n      </div>\n\n      <div className=\"step-input\">\n        <label>\n          Step:{\" \"}\n          <input\n            type=\"number\"\n            value={step}\n            min=\"1\"\n            onChange={handleStepChange}\n          />\n        </label>\n      </div>\n\n      <button className=\"reset-btn\" onClick={reset}>\n        Reset\n      </button>\n\n      <p className=\"limits\">Min: {minLimit} | Max: {maxLimit}</p>\n    </div>\n  );\n}\n\nexport default Counter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}