{"ast":null,"code":"var _jsxFileName = \"/home/sabir/Documents/CodePlay/pract-react/src/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [fruits, setFruits] = useState([\"Apple\", \"Orange\", \"banana\"]);\n  function addFruit() {\n    const newFruit = document.getElementById(\"newFruit\").value;\n    setFruits(f => [...f, newFruit]);\n    document.getElementById(\"newFruit\").value = \"\";\n  }\n  function removeFruit(i) {\n    setFruits(pf => fruits.filter((_, index) => {\n      return i !== index;\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List of Fruits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: fruits.map((fruit, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => removeFruit(index),\n          children: fruit\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"newFruit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addFruit,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"LYxDyqiP8rzrwIMw/tw1ti3sS8s=\");\n_c = App;\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 39,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ReactDOM","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","fruits","setFruits","addFruit","newFruit","document","getElementById","value","f","removeFruit","i","pf","filter","_","index","children","fileName","_jsxFileName","lineNumber","columnNumber","map","fruit","onClick","type","id","_c","root","createRoot","render","$RefreshReg$"],"sources":["/home/sabir/Documents/CodePlay/pract-react/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [fruits, setFruits] = useState([\"Apple\", \"Orange\", \"banana\"]);\n  function addFruit() {\n    const newFruit = document.getElementById(\"newFruit\").value;\n    setFruits((f) => [...f, newFruit]);\n    document.getElementById(\"newFruit\").value = \"\";\n  }\n\n  function removeFruit(i) {\n    setFruits( (pf)=>\n      fruits.filter((_, index) => {\n        return i !== index;\n      })\n    );\n  }\n  return (\n    <>\n      <h1>List of Fruits</h1>\n      <ul>\n        {fruits.map((fruit, index) => {\n          return (\n            <li key={index} onClick={() => removeFruit(index)}>\n              {fruit}\n            </li>\n          );\n        })}\n      </ul>\n      <input type=\"text\" id=\"newFruit\" />\n      <button onClick={addFruit}>Add</button>\n    </>\n  );\n}\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;EACnE,SAASS,QAAQA,CAAA,EAAG;IAClB,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,KAAK;IAC1DL,SAAS,CAAEM,CAAC,IAAK,CAAC,GAAGA,CAAC,EAAEJ,QAAQ,CAAC,CAAC;IAClCC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,KAAK,GAAG,EAAE;EAChD;EAEA,SAASE,WAAWA,CAACC,CAAC,EAAE;IACtBR,SAAS,CAAGS,EAAE,IACZV,MAAM,CAACW,MAAM,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAK;MAC1B,OAAOJ,CAAC,KAAKI,KAAK;IACpB,CAAC,CACH,CAAC;EACH;EACA,oBACElB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBvB,OAAA;MAAAmB,QAAA,EACGd,MAAM,CAACmB,GAAG,CAAC,CAACC,KAAK,EAAEP,KAAK,KAAK;QAC5B,oBACElB,OAAA;UAAgB0B,OAAO,EAAEA,CAAA,KAAMb,WAAW,CAACK,KAAK,CAAE;UAAAC,QAAA,EAC/CM;QAAK,GADCP,KAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CAAC;MAET,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLvB,OAAA;MAAO2B,IAAI,EAAC,MAAM;MAACC,EAAE,EAAC;IAAU;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnCvB,OAAA;MAAQ0B,OAAO,EAAEnB,QAAS;MAAAY,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACvC,CAAC;AAEP;AAACnB,EAAA,CA/BQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAgCZ,MAAM2B,IAAI,GAAGjC,QAAQ,CAACkC,UAAU,CAACtB,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEoB,IAAI,CAACE,MAAM,cAAChC,OAAA,CAACG,GAAG;EAAAiB,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,CAAC;AAAC,IAAAM,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}