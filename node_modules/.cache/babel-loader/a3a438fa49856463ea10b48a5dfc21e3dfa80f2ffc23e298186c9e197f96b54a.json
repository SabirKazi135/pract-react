{"ast":null,"code":"var _jsxFileName = \"/home/sabir/Documents/CodePlay/pract-react/src/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [foods, setFoods] = useState([\"Apple\", \"Orange\", \"Banana\"]);\n  function addFood(e) {\n    const newFood = document.getElementById(\"foodinput\").value;\n    document.getElementById(\"foodinput\").value = \"\";\n    setFoods(f => [...f, newFood]);\n  }\n  function removeFood(index) {\n    setFoods(foods.filter(elem));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"List of Goods\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: foods.map((food, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: removeFood(index),\n          children: food\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"foodinput\",\n      placeholder: \"Enter food name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addFood,\n      children: \"Add Food\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"T5sTufTLaJmGAALGpZql5G6hnzY=\");\n_c = App;\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ReactDOM","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","foods","setFoods","addFood","e","newFood","document","getElementById","value","f","removeFood","index","filter","elem","children","fileName","_jsxFileName","lineNumber","columnNumber","map","food","onClick","type","id","placeholder","_c","root","createRoot","render","$RefreshReg$"],"sources":["/home/sabir/Documents/CodePlay/pract-react/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [foods, setFoods] = useState([\"Apple\", \"Orange\", \"Banana\"]);\n  function addFood(e) {\n    const newFood = document.getElementById(\"foodinput\").value;\n    document.getElementById(\"foodinput\").value = \"\";\n    setFoods((f) => [...f, newFood]);\n  }\n\n  function removeFood(index) {\n    setFoods(foods.filter((elem)))\n  }\n  return (\n    <>\n      <h2>List of Goods</h2>\n      <ul>\n        {foods.map((food, index) => {\n          return (\n            <li key={index} onClick={removeFood(index)}>\n              {food}\n            </li>\n          );\n        })}\n      </ul>\n      <input type=\"text\" id=\"foodinput\" placeholder=\"Enter food name\" />\n      <button onClick={addFood}>Add Food</button>\n    </>\n  );\n}\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;EACjE,SAASS,OAAOA,CAACC,CAAC,EAAE;IAClB,MAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,KAAK;IAC1DF,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,KAAK,GAAG,EAAE;IAC/CN,QAAQ,CAAEO,CAAC,IAAK,CAAC,GAAGA,CAAC,EAAEJ,OAAO,CAAC,CAAC;EAClC;EAEA,SAASK,UAAUA,CAACC,KAAK,EAAE;IACzBT,QAAQ,CAACD,KAAK,CAACW,MAAM,CAAEC,IAAK,CAAC,CAAC;EAChC;EACA,oBACEjB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBtB,OAAA;MAAAkB,QAAA,EACGb,KAAK,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAET,KAAK,KAAK;QAC1B,oBACEf,OAAA;UAAgByB,OAAO,EAAEX,UAAU,CAACC,KAAK,CAAE;UAAAG,QAAA,EACxCM;QAAI,GADET,KAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CAAC;MAET,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLtB,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACC,EAAE,EAAC,WAAW;MAACC,WAAW,EAAC;IAAiB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClEtB,OAAA;MAAQyB,OAAO,EAAElB,OAAQ;MAAAW,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAC3C,CAAC;AAEP;AAAClB,EAAA,CA3BQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AA6BZ,MAAM2B,IAAI,GAAGjC,QAAQ,CAACkC,UAAU,CAACrB,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEmB,IAAI,CAACE,MAAM,cAAChC,OAAA,CAACG,GAAG;EAAAgB,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,CAAC;AAAC,IAAAO,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}