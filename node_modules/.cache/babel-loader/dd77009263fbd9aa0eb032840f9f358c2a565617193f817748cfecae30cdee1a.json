{"ast":null,"code":"var _jsxFileName = \"/home/sabir/Documents/CodePlay/pract-react/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ColorPicker() {}\n_c = ColorPicker;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"cm\"\n  }, void 0, false);\n}\n_c2 = App;\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 13\n}, this));\nvar _c, _c2;\n$RefreshReg$(_c, \"ColorPicker\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","ReactDOM","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","ColorPicker","_c","App","children","_c2","root","createRoot","document","getElementById","render","fileName","_jsxFileName","lineNumber","columnNumber","$RefreshReg$"],"sources":["/home/sabir/Documents/CodePlay/pract-react/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { useState } from \"react\";\nimport \"./App.css\";\n\n\nfunction ColorPicker() {\n  \n}\nfunction App() {\n  return (\n    <>\n    cm\n    </>\n  );\n}\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAGnB,SAASC,WAAWA,CAAA,EAAG,CAEvB;AAACC,EAAA,GAFQD,WAAW;AAGpB,SAASE,GAAGA,CAAA,EAAG;EACb,oBACEH,OAAA,CAAAF,SAAA;IAAAM,QAAA,EAAE;EAEF,gBAAE,CAAC;AAEP;AAACC,GAAA,GANQF,GAAG;AAQZ,MAAMG,IAAI,GAAGX,QAAQ,CAACY,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cAACV,OAAA,CAACG,GAAG;EAAAQ,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,CAAC;AAAC,IAAAZ,EAAA,EAAAG,GAAA;AAAAU,YAAA,CAAAb,EAAA;AAAAa,YAAA,CAAAV,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}