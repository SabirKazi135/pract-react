{"ast":null,"code":"var _jsxFileName = \"/home/sabir/Documents/CodePlay/pract-react/src/c.jsx\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { UserContext } from \"./index.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction C() {\n  _s();\n  const userText = useContext(UserContext);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"thisn is third one\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"mesge: \", userText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(C, \"J/g1WaJZhcgB8DNfXkOfiE8PfG0=\");\n_c = C;\nexport default C;\nvar _c;\n$RefreshReg$(_c, \"C\");","map":{"version":3,"names":["useContext","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","C","_s","userText","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/sabir/Documents/CodePlay/pract-react/src/c.jsx"],"sourcesContent":["import { useContext } from \"react\";\nimport { UserContext } from \"./index.js\";\n\n\nfunction C() {\n    const userText = useContext(UserContext);\n  return (\n    <>\n      <p>thisn is third one</p>\n      <p>mesge: {userText}</p>\n    </>\n  );\n}\n\nexport default C;\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGzC,SAASC,CAACA,CAAA,EAAG;EAAAC,EAAA;EACT,MAAMC,QAAQ,GAAGR,UAAU,CAACC,WAAW,CAAC;EAC1C,oBACEE,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACEN,OAAA;MAAAM,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACzBV,OAAA;MAAAM,QAAA,GAAG,SAAO,EAACD,QAAQ;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eACxB,CAAC;AAEP;AAACN,EAAA,CARQD,CAAC;AAAAQ,EAAA,GAADR,CAAC;AAUV,eAAeA,CAAC;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}